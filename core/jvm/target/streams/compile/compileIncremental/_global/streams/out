[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 9 sources, 2 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/core/shared/src/main/scala/bon/jo/words/MathExp.scala, ${BASE}/core/shared/src/main/scala/bon/jo/objects/StringExctractor.scala, ${BASE}/core/shared/src/main/scala/bon/jo/words/PhraseElement.scala, ${BASE}/core/shared/src/main/scala/bon/jo/words/Phrase.scala, ${BASE}/core/shared/src/main/scala/bon/jo/objects/words.scala, ${BASE}/core/shared/src/main/scala/bon/jo/utils/InputsToOutput.scala, ${BASE}/core/shared/src/main/scala/bon/jo/objects/All.scala, ${BASE}/core/shared/src/main/scala/bon/jo/utils/Tree.scala, ${BASE}/core/shared/src/main/scala/bon/jo/utils/ConvertList.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/core/shared/src/main/scala/bon/jo/words/MathExp.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/core/shared/src/main/scala/bon/jo/words/MathExp.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(bon.jo.words.MathExp$.FunctionMathExp, bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.Number, bon.jo.words.MathExp$.Function, bon.jo.words.MathExp$.-, bon.jo.words.MathExp, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*, bon.jo.words.MathExp$.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(bon.jo.words.MathExp$.FunctionMathExp, bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.Number, bon.jo.words.MathExp$.Function, bon.jo.words.MathExp$.-, bon.jo.words.MathExp, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*, bon.jo.words.MathExp$.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/core/shared/src/main/scala/bon/jo/words/MathExp.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.FunctionMathExp, bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.Number, bon.jo.words.MathExp$.Function, bon.jo.words.MathExp$.-, bon.jo.words.MathExp, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*, bon.jo.words.MathExp$.Symbol[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.Op by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.UnaryOp by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.* by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$./ by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.Symbol by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to C:\Users\Jonathan\Desktop\objectModel\core\jvm\target\scala-3.1.1\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\Jonathan\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-sbt-bridge\3.1.1\scala3-sbt-bridge-3.1.1.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 7b679162 for Scala Compiler version 3.1.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Jonathan\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.1.1\scala3-library_3-3.1.1.jar;C:\Users\Jonathan\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.6\scala-library-2.13.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Jonathan\Desktop\objectModel\core\jvm\target\scala-3.1.1\classes;C:\Users\Jonathan\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-js\scalajs-stubs_3\1.1.0\scalajs-stubs_3-1.1.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.532479799 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.Symbol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.Symbol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.Symbol,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(evaluate,[Default]), UsedName(apply,[Default]), UsedName(_2,[Default]), UsedName(source,[Default]), UsedName(copy,[Default]), UsedName(Symbol;init;,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.Symbol has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(evaluate,[Default]), UsedName(apply,[Default]), UsedName(_2,[Default]), UsedName(source,[Default]), UsedName(copy,[Default]), UsedName(Symbol;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.Op...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.UnaryOp by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.+ by bon.jo.words.MathExp$.UnaryOp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.- by bon.jo.words.MathExp$.UnaryOp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.* by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$./ by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.-, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.Op,ModifiedNames(changes = UsedName(sv,[Default]), UsedName(evaluate,[Default]))) invalidates 6 classes due to The bon.jo.words.MathExp$.Op has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(sv,[Default]), UsedName(evaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.-, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.Number...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.Number[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.Number)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.Number,ModifiedNames(changes = UsedName(evaluate,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.Number has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(evaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.Number)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.FunctionMathExp...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.FunctionMathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.FunctionMathExp)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of bon.jo.objects.test. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.FunctionMathExp,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(evaluate,[Default]), UsedName(apply,[Default]), UsedName(FunctionMathExp;init;,[Default]), UsedName(_2,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(copy$default$1,[Default]), UsedName(fun,[Default]), UsedName(_1,[Default]), UsedName(copy,[Default]), UsedName(symbols,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.FunctionMathExp has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(evaluate,[Default]), UsedName(apply,[Default]), UsedName(FunctionMathExp;init;,[Default]), UsedName(_2,[Default]), UsedName($lessinit$greater$default$1,[Default]), UsedName(copy$default$1,[Default]), UsedName(fun,[Default]), UsedName(_1,[Default]), UsedName(copy,[Default]), UsedName(symbols,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.FunctionMathExp)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.FunctionMathExp by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.+ by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.Number by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.Function by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.- by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.Op by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.UnaryOp by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.* by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$./ by bon.jo.words.MathExp$.Op[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.Symbol by bon.jo.words.MathExp[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.FunctionMathExp, bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.Number, bon.jo.words.MathExp$.Function, bon.jo.words.MathExp$.-, bon.jo.words.MathExp, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*, bon.jo.words.MathExp$.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of bon.jo.objects.test. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of bon.jo.objects.Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of bon.jo.objects.test. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp,ModifiedNames(changes = UsedName(tryApply,[Default]), UsedName(evaluate,[Default]))) invalidates 11 classes due to The bon.jo.words.MathExp has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tryApply,[Default]), UsedName(evaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.FunctionMathExp, bon.jo.words.MathExp$.+, bon.jo.words.MathExp$.Number, bon.jo.words.MathExp$.Function, bon.jo.words.MathExp$.-, bon.jo.words.MathExp, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.Op, bon.jo.words.MathExp$./, bon.jo.words.MathExp$.*, bon.jo.words.MathExp$.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.Function...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.Function)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.Function,ModifiedNames(changes = UsedName(evaluate,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.Function has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(evaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.Function)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.+...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.+[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.+)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.+,ModifiedNames(changes = UsedName(sv,[Default]), UsedName(evaluate,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.+ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(sv,[Default]), UsedName(evaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.+)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.*...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.*[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.*)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.*,ModifiedNames(changes = UsedName(sv,[Default]), UsedName(evaluate,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.* has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(sv,[Default]), UsedName(evaluate,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.*)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$./...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$./[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$./)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$./,ModifiedNames(changes = UsedName(evaluate,[Default]), UsedName(sv,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$./ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(evaluate,[Default]), UsedName(sv,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$./)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.UnaryOp...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.UnaryOp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.+ by bon.jo.words.MathExp$.UnaryOp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding bon.jo.words.MathExp$.- by bon.jo.words.MathExp$.UnaryOp[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.-, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.+)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.UnaryOp,ModifiedNames(changes = UsedName(evaluate,[Default]), UsedName(sv,[Default]))) invalidates 3 classes due to The bon.jo.words.MathExp$.UnaryOp has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(evaluate,[Default]), UsedName(sv,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.-, bon.jo.words.MathExp$.UnaryOp, bon.jo.words.MathExp$.+)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from bon.jo.words.MathExp$.-...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: bon.jo.words.MathExp$.-[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(bon.jo.words.MathExp$.-)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(bon.jo.words.MathExp$.-,ModifiedNames(changes = UsedName(evaluate,[Default]), UsedName(sv,[Default]))) invalidates 1 classes due to The bon.jo.words.MathExp$.- has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(evaluate,[Default]), UsedName(sv,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(bon.jo.words.MathExp$.-)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
